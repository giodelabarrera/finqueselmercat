
{% autoescape false %}

    {# {% set associationadmin = sonata_admin.field_description.associationadmin %} #}
    {% set entityTransName = entity_name[0:1]|lower ~ entity_name[1:] %}

    {# <!-- edit many association --> #}

    <script type="text/javascript">

        {#
          handle link click in a list :
            - if the parent has an objectId defined then the related input get updated
            - if the parent has NO object then an ajax request is made to refresh the popup
        #}

        var field_dialog_form_list_link_{{ id }} = function(event) {
            initialize_popup_{{ id }}();

            var target = jQuery(this);

            // return if the link is an anchor inside the same page
            if (this.nodeName == 'A' && (target.attr('href').length == 0 || target.attr('href')[0] == '#')) {
                return;
            }

            event.preventDefault();
            event.stopPropagation();

            // var element = jQuery(this).parents('#field_dialog_{{ id }} .sonata-ba-list-field');
            var element = jQuery(this).parents('#field_dialog_{{ id }} td');

            // the user does not click on a row column
            if (element.length == 0) {
                // make a recursive call (ie: reset the filter)
                jQuery.ajax({
                    type: 'GET',
                    url: jQuery(this).attr('href'),
                    dataType: 'html',
                    success: function(html) {
                        field_dialog_content_{{ id }}.html(html);
                        field_dialog_form_list_handle_action_{{ id }}();
                    }
                });

                return;
            }

            jQuery('#{{ id }}').val($(this).data('id'));
            jQuery('#{{ id }}').trigger('change');

            field_dialog_{{ id }}.modal('hide');
        };

        // this function handle action on the modal list when inside a selected list
        var field_dialog_form_list_handle_action_{{ id }}  =  function() {

            // capture the submit event to make an ajax call, ie : POST data to the
            // related create admin
            jQuery('a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
            jQuery('form', field_dialog_{{ id }}).on('submit', function(event) {
                event.preventDefault();

                var form = jQuery(this);

                jQuery(form).ajaxSubmit({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    dataType: 'html',
                    data: {_xml_http_request: true},
                    success: function(html) {
                        field_dialog_content_{{ id }}.html(html);
                        field_dialog_form_list_handle_action_{{ id }}();
                    }
                });
            });
        };

        // handle the list link
        var field_dialog_form_list_{{ id }} = function(event) {

            initialize_popup_{{ id }}();

            event.preventDefault();
            event.stopPropagation();

            var a = jQuery(this);

            field_dialog_content_{{ id }}.html('');

            // retrieve the form element from the related admin generator
            jQuery.ajax({
                url: a.attr('href'),
                dataType: 'html',
                success: function(html) {

                    // populate the popup container
                    field_dialog_content_{{ id }}.html(html);

                    field_dialog_title_{{ id }}.html("{{ 'admin.action.list'|trans }}");

                    field_dialog_form_list_handle_action_{{ id }}();

                    // open the dialog in modal mode
                    field_dialog_{{ id }}.modal();
                }
            });
        };

        // handle the add link
        var field_dialog_form_add_{{ id }} = function(event) {
            initialize_popup_{{ id }}();

            event.preventDefault();
            event.stopPropagation();

            var a = jQuery(this);

            field_dialog_content_{{ id }}.html('');

            // retrieve the form element from the related admin generator
            jQuery.ajax({
                url: a.attr('href'),
                dataType: 'html',
                success: function(html) {

                    // populate the popup container
                    field_dialog_content_{{ id }}.html(html);
                    field_dialog_title_{{ id }}.html("{{ 'admin.title.new'|trans }}");

                    // capture the submit event to make an ajax call, ie : POST data to the
                    // related create admin
                    jQuery('a', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
                    jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});

                    // open the dialog in modal mode
                    field_dialog_{{ id }}.modal();
                }
            });
        };

        // handle the post data
        var field_dialog_form_action_{{ id }} = function(event) {

            var element = jQuery(this);

            // return if the link is an anchor inside the same page
            if (this.nodeName == 'A' && (element.attr('href').length == 0 || element.attr('href')[0] == '#')) {
                return;
            }

            event.preventDefault();
            event.stopPropagation();

            initialize_popup_{{ id }}();

            if (this.nodeName == 'FORM') {
                var url  = element.attr('action');
                var type = element.attr('method');
            } else if (this.nodeName == 'A') {
                var url  = element.attr('href');
                var type = 'GET';
            } else {
                alert('unexpected element : @' + this.nodeName + '@');
                return;
            }

            if (element.hasClass('ott-modal-action')) {
                return;
            }

            var data = {
                _xml_http_request: true
            }

            var form = jQuery(this);

            // the ajax post
            jQuery(form).ajaxSubmit({
                url: url,
                type: type,
                data: data,
                success: function(data) {

                    // if the crud action return ok, then the element has been added
                    // so the widget container must be refresh with the last option available
                    if (typeof data != 'string' && data.status == 'OK') {
                        field_dialog_{{ id }}.modal('hide');
                        {#
                           in this case we update the hidden input, and call the change event to
                           retrieve the post information
                        #}
                        jQuery('#{{ id }}').val(data.objectId);
                        jQuery('#{{ id }}').change();

                        return;
                    }

                    // otherwise, display form error
                    field_dialog_content_{{ id }}.html(data);

                    // reattach the event
                    jQuery('form', field_dialog_{{ id }}).submit(field_dialog_form_action_{{ id }});
                }
            });

            return false;
        };

        var field_dialog_{{ id }}         = false;
        var field_dialog_content_{{ id }} = false;
        var field_dialog_title_{{ id }}   = false;

        function initialize_popup_{{ id }}() {
            // initialize component
            if (!field_dialog_{{ id }}) {
                field_dialog_{{ id }}         = jQuery("#field_dialog_{{ id }}");
                field_dialog_content_{{ id }} = jQuery(".modal-body", "#field_dialog_{{ id }}");
                field_dialog_title_{{ id }}   = jQuery(".modal-title", "#field_dialog_{{ id }}");

                // move the dialog as a child of the root element, nested form breaks html ...
                jQuery(document.body).append(field_dialog_{{ id }});
            }
        }

        {#
            This code is used to defined the "add" popup
        #}
        // this function initialize the popup
        // this can be only done this way has popup can be cascaded
        function start_field_dialog_form_add_{{ id }}(link) {

            // remove the html event
            link.onclick = null;

            initialize_popup_{{ id }}();

            // add the jQuery event to the a element
            jQuery(link)
                    .click(field_dialog_form_add_{{ id }})
                    .trigger('click')
            ;

            return false;
        }

        {#
            This code is used to defined the "list" popup
        #}
        // this function initialize the popup
        // this can be only done this way has popup can be cascaded
        function start_field_dialog_form_list_{{ id }}(link) {

            link.onclick = null;

            initialize_popup_{{ id }}();

            // add the jQuery event to the a element
            jQuery(link)
                    .click(field_dialog_form_list_{{ id }})
                    .trigger('click')
            ;

            return false;
        }

        function remove_selected_element_{{ id }}(link) {

            link.onclick = null;

            jQuery(link)
                    .click(field_remove_element_{{ id}})
                    .trigger('click')
            ;

            return false;
        }

        function field_remove_element_{{ id }}(event) {
            event.preventDefault();

            if (jQuery('#{{ id }} option').get(0)) {
                jQuery('#{{ id }}').attr('selectedIndex', '-1').children("option:selected").attr("selected", false);
            }

            jQuery('#{{ id }}').val('');
            jQuery('#{{ id }}').trigger('change');

            return false;
        }
        {#
          attach onchange event on the input
        #}

        // update the label
        jQuery('#{{ id }}').on('change', function(event) {

            if (jQuery('#{{ id }}').val() == '') {
                jQuery('#field_widget_{{ id }}').html('');
            }
            else {
                jQuery.ajax({
                    type: 'GET',
                    url: Routing.generate('admin_core_get_short_description', {
                        'id': jQuery(this).val(),
                        'show_route': '{{ show_route }}',
                        'class': '{{ class }}',
                    }),
                    dataType: 'html',
                    success: function(html) {
                        jQuery('#field_widget_{{ id }}').html(html);
                    }
                });
            }
        });

    </script>

{% endautoescape %}
