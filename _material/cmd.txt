# Create a new repository

git clone https://gitlab.com/giodelabarrera/finqueselmercat.git
cd finqueselmercat
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master

# Existing folder or Git repository

cd existing_folder
git init
git remote add origin https://gitlab.com/giodelabarrera/finqueselmercat.git
git add .
git commit
git push -u origin master



# Actualizar vendor via composer "ESTO NO SE DEBE DE HACER"

sudo php composer.phar update

# Agregar bundle e instalar 

sudo composer require friendsofsymfony/user-bundle "~2.0@dev"


# Elimina ficheros log y cache

rm -R app/logs/* app/cache/*; 


# Limpiar cache local dev

sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R $user:www-data app/cache/ app/logs/; sudo php app/console cache:clear; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R $user:www-data app/cache/ app/logs/


# Limpiar cache local prod

sudo chmod -R 777 app/cache/; sudo chmod -R 777 app/logs/; sudo chown -R $user:www-data app/cache/; sudo chown -R $user:www-data app/logs/; sudo php app/console cache:clear --env=prod; sudo chmod -R 777 app/cache/; sudo chmod -R 777 app/logs/; sudo chown -R $user:www-data app/cache/; sudo chown -R $user:www-data app/logs/


# Limpiar cache dev

sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/; sudo php -d memory_limit=1024M app/console cache:clear; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/


# Limpiar cache prod

sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/; sudo php -d memory_limit=1024M app/console cache:clear --env=prod; sudo chmod -R 777 app/cache/ app/logs/; sudo chown -R foxize:psacln app/cache/ app/logs/


# Dar permisos directorio web SIRVE PARA CUANDO NO CARGAN LOS CSS

sudo chown -R foxize:psacln web/


# Assets

php app/console assets:install --symlink


# Assetic para producción

php app/console assetic:dump


# Generar getters, setters de solo una entidad de un bundle. Ej: MenuItem del bundle OttAdminBundle

php app/console generate:doctrine:entities <BUNDLE>:<CLASS>


# Todo en 1, producción

php app/console assets:install --symlink; php app/console assetic:dump; php app/console cache:clear; php app/console cache:clear --env=prod


# Actualizar Schema Base de Datos Doctrine

php app/console doctrine:schema:update --dump-sql  # muestra los cambios a realizar
php app/console doctrine:schema:update --force     # ejecuta los cambios de doctrine en la base de datos


# Generar ficheros desde tablas para importacion a clases php

php app/console doctrine:mapping:import AdminBundle yml


# Cargar clases php para tablas desde ficheros

php app/console doctrine:mapping:convert annotation ./src

# Crea desde fichero generado solo la clase

php app/console doctrine:mapping:convert annotation ./src --filter=Configuracion
-- AdminUser.orm.yml no debe tener definidos la clave "fields"


# Generar getters, setters de solo una entidad de un bundle. Ej: MenuItem del bundle OttAdminBundle

php app/console doctrine:generate:entities AdminBundle:Configuracion


# Generar crud en modo no interaccion

php app/console generate:doctrine:crud --entity=AdminBundle:NombreDeEntidad --format=annotation --route-prefix=/admin/nombre_de_entidad --with-write --overwrite --no-interaction
-- Modificar guiones bajos por guiones medios en anotacion en Controller @Route("/admin/ott_empresas_cesion_datos") por @Route("/admin/ott-empresas-cesion-datos")
-- Mover el directorio de plantilla que se habra generado en app/Resources/views. Por ejemplo "app/Resources/views/configuracion" mover a "app/Resources/views/admin"